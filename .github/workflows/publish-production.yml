name: Production Deployment

on:
  push:
    branches: ['master']
    tags:
      - v*.*.*

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  HUSKY: 0

jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: cache-global
        with:
          path: node_modules
          key: ${{ runner.os }}-node-v3-${{ hashFiles('yarn.lock') }}

      - name: install_dependencies
        if: steps.cache-global.outputs.cache-hit != 'true'
        run: yarn install

  typecheck:
    needs: [install_dependencies]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: cache-global
        with:
          path: node_modules
          key: ${{ runner.os }}-node-v3-${{ hashFiles('yarn.lock') }}

      - name: run_typescript_check
        run: 'yarn typecheck'

  test_ci:
    needs: [install_dependencies]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: cache-global
        with:
          path: node_modules
          key: ${{ runner.os }}-node-v3-${{ hashFiles('yarn.lock') }}

      - name: run_tests
        run: 'yarn test:ci'

  build:
    needs: [install_dependencies]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: cache-global
        with:
          path: node_modules
          key: ${{ runner.os }}-node-v3-${{ hashFiles('yarn.lock') }}

      - name: run_tests
        run: 'yarn build'

  deploy:
    needs: [typecheck, test_ci, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: install_vercel_cli
        run: yarn global add vercel@latest
      - name: pull_vercel_environment_information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: build_project_artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: deploy_project_artifacts_to_vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  release:
    needs: [deploy]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-v3-${{ hashFiles('yarn.lock')

      - name: generate_release
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_RELEASE_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

      - name: 'create_tag'
        uses: Actions-R-Us/actions-tagger@v2
